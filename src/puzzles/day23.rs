#[test]

fn test() {
    let example1 = String::from(
"#.#####################
#.......#########...###
#######.#########.#.###
###.....#.>.>.###.#.###
###v#####.#v#.###.#.###
###.>...#.#.#.....#...#
###v###.#.#.#########.#
###...#.#.#.......#...#
#####.#.#.#######.#.###
#.....#.#.#.......#...#
#.#####.#.#.#########v#
#.#...#...#...###...>.#
#.#.#v#######v###.###v#
#...#.>.#...>.>.#.###.#
#####v#.#.###v#.#.###.#
#.....#...#...#.#.#...#
#.#########.###.#.#.###
#...###...#...#...#.###
###.###.#.###v#####v###
#...#...#.#.>.>.#.>.###
#.###.###.#.###.#.#v###
#.....###...###...#...#
#####################.#"
    );

    println!("Example 1:");
    assert_eq!(solve1(&example1), 5);
    assert_eq!(solve2(&example1), 7);
}

pub fn solve1(_data: &String) -> usize {
    let res = 0;
    println!("Part 1 = {}", res);
    res
}

pub fn solve2(_data: &String) -> usize {
    let res = 0;
    println!("Part 2 = {}", res);
    res
}